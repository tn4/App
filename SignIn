
package javaapplication1;
import java.awt.PopupMenu;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.Scanner;
import java.util.Formatter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class SigningIn extends javax.swing.JFrame 
{

    public SigningIn() throws FileNotFoundException 
    {
        initComponents();
        //READ THE STUDENTS NAME FROM THE STUDENTS.TXT
        Scanner file = new Scanner(new File(students));
        while(file.hasNextLine())
        {
            //ADD IT TO THE MODEL 
            list1.addElement(file.nextLine());
	}
	//SET LIST TO THE STUDENTS LIST 
        jList1.setModel(list1);
        //ARRAYS
        signin = new double[list1.getSize()];
        signout = new double[list1.getSize()];
        timedone = new double[list1.getSize()];
        //LOGPRESET, READ THE DATA FROM THE PRE-EXISTING FILE
        LogData();
        //TIMEPRESET, READ THE DATA FROM THE PRE-EXISTING FILE
        PresetTime();
    }
    public void LogData()
    {
    	//SET THE FRAME OF THE LOG VISIBLE
        datas.setVisible(true);
    }
    public void AddToLog(Double data)
    {
    	//ADD A DATA TO THE MODEL ARRAY, A DOUBLE
        event.addElement(data);
        //REFRESH THE DATA
        datas.jList1.setModel(event);
    }
    public void AddToLog(String data)
    {
    	//ADD A DATA TO THE MODEL ARRAY, A STRING
        event.addElement(data);
        //REFRESH THE DATA
        datas.jList1.setModel(event);
    }
    //READ THE EXISTING FILE DATA AND RECORD IT TO THE LIST
    public void PresetTime() throws FileNotFoundException
    {
        int spot = 0;
        Scanner preset = new Scanner(new File(times));
        while(preset.hasNextDouble())
        {
            timedone[spot] = timedone[spot] + preset.nextDouble();
            AddToLog(timedone[spot]);
            spot++;
        }
    }
    private void initComponents() 
    {

        jScrollPane2 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        jList2.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        jScrollPane2.setViewportView(jList2);

        jButton2.setText("Sign Out");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton1.setText("Sign In");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jList1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        jScrollPane1.setViewportView(jList1);

        jButton3.setText("Record Day");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Show Data");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    jButton4ActionPerformed(evt);
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(SigningIn.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, 93, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton3)
                        .addGap(18, 18, 18)
                        .addComponent(jButton4)
                        .addGap(8, 8, 8))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) 
    {
        signout[list1.indexOf(jList2.getSelectedValue())] = (double) System.currentTimeMillis();
        AddToLog("Signed out " + jList2.getSelectedValue()+ " " + signout[list1.indexOf(jList2.getSelectedValue())]);
        list2.removeElement(jList2.getSelectedValue());
    }

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) 
    {
    	//CHECK IF THE SELECTED VALUE IS EXISTING
        for(int i =0; i < list2.getSize();i++)
        {
            check = (jList1.getSelectedValue()).equals(list2.get(i));
        }
        //IF IT DOESN'T EXIST
        if (check == false)
        {
            list2.addElement(jList1.getSelectedValue());
            jList2.setModel(list2);
            signin[list1.indexOf(jList1.getSelectedValue())] = (double) System.currentTimeMillis();
            AddToLog("Signed in " + jList1.getSelectedValue()+ " " + signin[list1.indexOf(jList1.getSelectedValue())]);
        }
        //IF IT EXIST ALREADY
        else
        {
            JOptionPane.showMessageDialog(message_frame,"You have already signed in");
        }

    }
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) 
    {
    	//READ THE EXISTING TIME FILE
       	try
        {
            thefile = new Formatter(times);
        }
        catch (FileNotFoundException ex)
        {

            Logger.getLogger(SigningIn.class.getName()).log(Level.SEVERE, null, ex);
        }
        //ADD THE EXISTING DATA TO THE TIMEDONE VARIABLE
        for(int i = 0; i < list2.getSize();i++)
        {
            timedone[list1.indexOf(list2.getElementAt(i))] = System.currentTimeMillis();
        }
        //CLEAR THE LSIT
        list2.clear();
        jList2.setModel(list2);
        //DO THE MATH
        for(int i = 0; i < list1.getSize();i++)
        {
            timedone[i] = timedone[i]+(signout[i] - signin[i]);
            AddToLog(list1.getElementAt(i)+ " signed = " + signin[i] + " , signout = " + signout[i]+ " , time done = " + timedone[i] );
            thefile.format("%s \n",timedone[i]);
        }
        thefile.close();
    }

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) throws FileNotFoundException
    {
       //SET THE FRAME, AND VISIBLE
        DataFrame frame = new DataFrame();
        frame.setVisible(true);
        frame.enableInputMethods(false);
        frame.jList1.setModel(list1);
	//DIVIDE THE MILISEC INTO HOURS
        for(int i = 0; i < timedone.length;i++)
        {
            list3.addElement(timedone[i]/3600000);
        }
        frame.jList1.setModel(list1);
        frame.jList2.setModel(list3);
        frame.setResizable(false);


    }

   
    public static void main(String args[]) {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SigningIn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SigningIn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SigningIn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SigningIn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new SigningIn().setVisible(true);
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(SigningIn.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration 
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JList jList1;
    private javax.swing.JList jList2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration
    String times = "times.txt";
    String students = "students.txt";
    
    DefaultListModel list1 = new DefaultListModel();
    DefaultListModel list2 = new DefaultListModel();
    DefaultListModel list3 = new DefaultListModel();
    DefaultListModel event = new DefaultListModel();
    JFrame message_frame = new JFrame();
    Formatter thefile = null;
    Logs datas = new Logs();
    

    double[] signin;
    double[] signout;
    double[] timedone;
    int slot =0;
    boolean check = false;

}
